sudo chown nginx:nginx /var/www/html/Web-Scrapping-Backend/public/test-simple-db.php

<?php

require_once 'vendor/autoload.php';

use GuzzleHttp\Client;

// Test your AI API directly
$client = new Client();
$url = "http://10.58.38.218:30011/v1/completions";

$testPrompt = "Analyze the sentiment. Return JSON only: {\"generic_attributes\":{\"overallSentiment\":\"Positive\"},\"category_specific_attributes\":{}}

Review: This app is great and easy to use.";

$requestBody = [
    'model' => '/mnt/data/llms/Llama-3.3-70B-Instruct',
    'prompt' => $testPrompt,
    'temperature' => 0.0,
    'top_p' => 0.95,
    'max_tokens' => 500,
];

echo "Testing AI API...\n";
echo "URL: $url\n";
echo "Request Body: " . json_encode($requestBody, JSON_PRETTY_PRINT) . "\n\n";

try {
    $response = $client->post($url, [
        'headers' => [
            'Content-Type' => 'application/json',
        ],
        'json' => $requestBody,
        'proxy' => [
            'http' => null,
            'https' => null,
        ],
        'verify' => false,
        'timeout' => 60,
    ]);

    echo "Status Code: " . $response->getStatusCode() . "\n";
    echo "Headers: " . json_encode($response->getHeaders(), JSON_PRETTY_PRINT) . "\n";
    
    $responseBody = $response->getBody()->getContents();
    echo "Raw Response Body: " . $responseBody . "\n\n";
    
    $decodedResponse = json_decode($responseBody, true);
    echo "Decoded Response: " . json_encode($decodedResponse, JSON_PRETTY_PRINT) . "\n";
    
    if (isset($decodedResponse['choices'][0]['text'])) {
        echo "Extracted Text: " . $decodedResponse['choices'][0]['text'] . "\n";
    } else {
        echo "ERROR: No 'choices[0].text' found in response\n";
    }

} catch (\Exception $e) {
    echo "ERROR: " . $e->getMessage() . "\n";
    echo "Trace: " . $e->getTraceAsString() . "\n";
}
