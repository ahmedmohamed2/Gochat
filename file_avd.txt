    public function sendRequest($prompt, $reviewText)
    {
        // Combine system prompt and user content into a single prompt
        $combinedPrompt = $prompt . "\n\nReview Text: " . $reviewText;

        $requestBody = [
            'model' => $this->model,
            'prompt' => $combinedPrompt,
            'temperature' => 0.0,
            'top_p' => 0.95,
            'max_tokens' => 500,
        ];

        try {
            Log::info('Sending AI request:', [
                'url' => $this->apiUrl,
                'promptLength' => strlen($combinedPrompt)
            ]);

            $response = $this->client->post($this->apiUrl, [
                'headers' => [
                    'Content-Type' => 'application/json',
                ],
                'json' => $requestBody,
                'proxy' => [
                    'http' => null,
                    'https' => null,
                ],
                'timeout' => 300,
                'connect_timeout' => 30,
                'verify' => false,
            ]);

            $responseBody = json_decode($response->getBody()->getContents(), true);

            Log::info('AI response received:', [
                'statusCode' => $response->getStatusCode(),
                'hasChoices' => isset($responseBody['choices']),
                'hasText' => isset($responseBody['choices'][0]['text'])
            ]);

            // Extract the text from the response structure
            if (isset($responseBody['choices'][0]['text'])) {
                $rawContent = trim($responseBody['choices'][0]['text']);
                
                if (empty($rawContent)) {
                    Log::warning('AI returned empty text content');
                    return null;
                }
                
                Log::info('Raw AI content received:', [
                    'contentLength' => strlen($rawContent),
                    'contentPreview' => substr($rawContent, 0, 100) . '...'
                ]);
                
                $cleanedContent = $this->extractAndCleanJsonFromResponse($rawContent);
                
                return [
                    'choices' => [
                        [
                            'message' => [
                                'content' => $cleanedContent
                            ]
                        ]
                    ]
                ];
            } else {
                Log::warning('No choices[0].text in response:', [
                    'responseKeys' => array_keys($responseBody ?? [])
                ]);
                return null;
            }

        } catch (\Exception $e) {
            Log::error('Local AI API Request Failed: ' . $e->getMessage());
            return null;
        }
    }

    public function sentimentAnalysisPrompt($brandDetails)
    {
        return "Analyze the sentiment of the following review for these specific attributes:\n\n" .
            "BRAND: {$brandDetails['brandName']}\n" .
            "CATEGORY: {$brandDetails['category']}\n\n" .
            "ATTRIBUTES TO ANALYZE:\n" .
            "Generic: {$brandDetails['genericAttributes']}\n" .
            "Category Specific: {$brandDetails['categorySpecificAttributes']}\n\n" .
            "INSTRUCTIONS:\n" .
            "1. Read the review text carefully\n" .
            "2. For each attribute, determine if the sentiment is Positive, Negative, or Neutral\n" .
            "3. Return ONLY a JSON object in this EXACT format:\n\n" .
            '{"generic_attributes":{"overallSentiment":"Positive","customerService":"Positive"},"category_specific_attributes":{"5G network":"Positive","loyaltyPrograms":"Neutral"}}' . "\n\n" .
            "IMPORTANT RULES:\n" .
            "- Use only: Positive, Negative, or Neutral\n" .
            "- Return ONLY the JSON object\n" .
            "- No additional text before or after the JSON\n" .
            "- No explanations or descriptions\n" .
            "- Do not repeat the JSON\n" .
            "- Make sure JSON is valid and complete\n\n" .
            "REVIEW TEXT TO ANALYZE:\n";
    }
